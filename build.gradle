buildscript {
    ext {
        springBootVersion = '2.0.3.RELEASE'
    }
    repositories {
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id "com.moowork.node" version "1.2.0"
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'maven-publish'

node {
    // Version of node to use.
    version = '10.13.0'

    // Version of npm to use.
    npmVersion = '6.2.0'

    // Base URL for fetching node distributions (change if you have a mirror).
    distBaseUrl = 'https://nodejs.org/dist'

    // If true, it will download node using above parameters.
    // If false, it will try to use globally installed node.
    download = true

    // Set the work directory for unpacking node
    workDir = file("${project.buildDir}/web/reactiveUI/nodejs")

    // Set the work directory for NPM
    npmWorkDir = file("${project.buildDir}/web/reactiveUI/npm")

    // Set the work directory where node_modules should be located
    nodeModulesDir = file("${project.projectDir}/web/reactiveUI")
}

//npm_install.dependsOn(npm_cache_clean)
task buildAngularProject(type: NpmTask) {
    // Runs the build script from package.json
    args = ['run-script', 'build_prod']
}
buildAngularProject.dependsOn(npmInstall)

task springAngularMerge() {
    delete "src/main/resources/static"
    mkdir 'src/main/resources/static'
    copy {
        from 'web/reactiveUI/dist/reactiveUI/'
        into 'src/main/resources/static/'
    }
    doLast {
        println 'Merged the Angular binaries into Spring Boot'
    }
}
springAngularMerge.dependsOn(buildAngularProject)
compileJava.dependsOn(springAngularMerge)

build.dependsOn(publishToMavenLocal)

group = 'org.springredis'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenLocal()
    mavenCentral()
}

// This will make sure that jar task runs even though there is a bootJar task
jar {
    enabled = true
}
// This makes sure that bootJar task does not create a jar with the same name as jar task
bootJar {
    classifier = 'boot'
}

// Publish to local maven repo
publishing {
    publications {
        maven(MavenPublication) {
            from components.java
        }
    }
}


dependencies {
    compile('org.springframework.boot:spring-boot-starter-data-redis')
    compile('org.springframework.boot:spring-boot-starter-data-redis-reactive')
    compile('org.apache.commons:commons-pool2:2.0')
    // https://mvnrepository.com/artifact/redis.clients/jedis
    compile group: 'redis.clients', name: 'jedis', version: '2.9.0'

    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-webflux')
    compileOnly('org.projectlombok:lombok:1.18.2')

    compile('org.springframework.boot:spring-boot-starter-websocket')

    compile('org.webjars:webjars-locator-core')
    compile('org.webjars:sockjs-client:1.0.2')
    compile('org.webjars:stomp-websocket:2.3.3')
    compile('org.webjars:bootstrap:3.3.7')
    compile('org.webjars:jquery:3.1.0')

    // Swagger
    compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.8.0'
    compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.8.0'


    runtime('org.springframework.boot:spring-boot-devtools')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('io.projectreactor:reactor-test')
}

//task angularBuild() {
//    doFirst {
//        println 'Trying to build Angular App'
//    }
//    exec{
//        workingDir 'web/reactiveUI/'
//        commandLine 'npm', 'install'
//    }
//    exec{
//        workingDir 'web/reactiveUI/'
//        commandLine 'ng', 'build', '--prod', '--output-hashing', 'none'
//    }
//    doLast {
//        println 'Angular Build Completed'
//    }
//}
//
//task springAngularMerge() {
//    tasks.angularBuild.execute()
//    delete "src/main/resources/static"
//    mkdir 'src/main/resources/static'
//    copy {
//        from 'web/reactiveUI/dist/reactiveUI/'
//        into 'src/main/resources/static/'
//    }
//    doLast {
//        println 'Merged the Angular binaries into Spring Boot'
//    }
//}
